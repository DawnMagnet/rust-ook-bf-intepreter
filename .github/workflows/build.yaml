name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: rob

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_name: rob-linux-x86_64-gnu.tar.gz
            asset_name: rob
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            archive_name: rob-linux-aarch64-gnu.tar.gz
            asset_name: rob
            cross: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive_name: rob-linux-x86_64-musl.tar.gz
            asset_name: rob
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            archive_name: rob-linux-aarch64-musl.tar.gz
            asset_name: rob
            cross: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_name: rob-windows-x86_64.exe
            asset_name: rob.exe
            cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_name: rob-macos-x86_64.tar.gz
            asset_name: rob
            cross: false
          - os: macos-latest
            target: aarch64-apple-darwin
            archive_name: rob-macos-aarch64.tar.gz
            asset_name: rob
            cross: false

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install musl-tools (Linux)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: Prepare archive (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.archive_name }} ${{ matrix.asset_name }}

      - name: Prepare archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          cp ${{ matrix.asset_name }} ..\\..\\..\\${{ matrix.archive_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.archive_name }}
          if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/rob-linux-x86_64-gnu.tar.gz
            **/rob-linux-aarch64-gnu.tar.gz
            **/rob-linux-x86_64-musl.tar.gz
            **/rob-linux-aarch64-musl.tar.gz
            **/rob-windows-x86_64.exe
            **/rob-macos-x86_64.tar.gz
            **/rob-macos-aarch64.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
